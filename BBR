＃！/ usr / bin / env bash
＃
＃自动安装TCP BBR的最新内核
＃
#System System：CentOS 6 +，Debian7 +，Ubuntu12 +
＃
#Copyright（C）2017 Simon Huang <www.iyu.co>
＃
#URL：http：//www.iyu.co/share/tcp-bbr/
＃

红色= '\ 033 [0;31米'
绿色= '\ 033 [0;32米'
黄色= '\ 033 [0;33米'
平原= '\ 033 [0米'

[[$ EUID -ne 0]] && echo -e“$ {red}错误：$ {plain}此脚本必须以root身份运行！” &&退出1

[[-d“/ proc / vz”]] && echo -e“$ {red}错误：$ {plain}您的VPS基于OpenVZ，不受支持。” &&退出1

if [-f / etc / redhat-release]; 然后
    释放= “centos的”
elif cat / etc / issue | grep -Eqi“debian”; 然后
    释放= “Debian的”
elif cat / etc / issue | grep -Eqi“ubuntu”; 然后
    释放= “Ubuntu的”
elif cat / etc / issue | grep -Eqi“centos | red hat | redhat”; 然后
    释放= “centos的”
elif cat / proc / version | grep -Eqi“debian”; 然后
    释放= “Debian的”
elif cat / proc / version | grep -Eqi“ubuntu”; 然后
    释放= “Ubuntu的”
elif cat / proc / version | grep -Eqi“centos | red hat | redhat”; 然后
    释放= “centos的”
科幻

get_latest_version（）{

    latest_version = $（wget -qO- http://kernel.ubuntu.com/~kernel-ppa/mainline/ | awk -F'\“v''/ v [4-9]。/ {print $ 2}'| cut -d / -f1 | grep -v  -  | sort -V | tail -1）

    [-z $ {latest_version}] &&返回1

    if [[`getconf WORD_BIT` ==“32”&&`getconf LONG_BIT` ==“64”]]; 然后
        deb_name = $（wget -qO- http://kernel.ubuntu.com/~kernel-ppa/mainline/v${latest_version}/ | grep“linux-image”| grep“generic”| awk -F'\“ >''/ amd64.deb/{print $ 2}'| cut -d'<' -  f1 | head -1）
        deb_kernel_url = “http://kernel.ubuntu.com/~kernel-ppa/mainline/v${latest_version}/${deb_name}”
        deb_kernel_name = “Linux的图像 -  $ {} latest_version -amd64.deb”
    其他
        deb_name = $（wget -qO- http://kernel.ubuntu.com/~kernel-ppa/mainline/v${latest_version}/ | grep“linux-image”| grep“generic”| awk -F'\“ >''/ i386.deb/{print $ 2}'| cut -d'<' -  f1 | head -1）
        deb_kernel_url = “http://kernel.ubuntu.com/~kernel-ppa/mainline/v${latest_version}/${deb_name}”
        deb_kernel_name = “Linux的图像 -  $ {} latest_version -i386.deb”
    科幻

    [！-z $ {deb_name}] &&返回0 || 返回1
}

get_opsy（）{
    [-f / etc / redhat-release] && awk'{print（$ 1，$ 3~ / ^ [0-9] /？$ 3：$ 4）}'/ etc / redhat-release && return
    [-f / etc / os-release] && awk -F'[=“]''/ PRETTY_NAME / {print $ 3，$ 4，$ 5}'/ etc / os-release && return
    [-f / etc / lsb-release] && awk -F'[=“] +''/ DESCRIPTION / {print $ 2}'/ etc / lsb-release && return
}

opsy = $（get_opsy）
arch = $（uname -m）
lbit = $（getconf LONG_BIT）
kern = $（uname -r）

get_char（）{
    SAVEDSTTY =`stty -g`
    stty -echo
    stty cbreak
    dd if = / dev / tty bs = 1 count = 1 2> / dev / null
    stty -raw
    stty echo
    stty $ SAVEDSTTY
}

getversion（）{
    if [[-s / etc / redhat-release]]; 然后
        grep -oE“[0-9。] +”/ etc / redhat-release
    其他
        grep -oE“[0-9。] +”/ etc / issue
    科幻
}

centosversion（）{
    if [“$ {release}”==“centos”]; 然后
        本地代码= $ 1
        本地版本=“$（getversion）”
        local main_ver = $ {version %%。*}
        if [“$ main_ver”==“$ code”]; 然后
            返回0
        其他
            返回1
        科幻
    其他
        返回1
    科幻
}

check_bbr_status（）{
    local param = $（sysctl net.ipv4.tcp_available_congestion_control | awk'{print $ 3}'）
    如果uname -r | grep -Eqi“4.10。”; 然后
        if [[“$ {param}”==“bbr”]]; 然后
            返回0
        其他
            返回1
        科幻
    其他
        返回1
    科幻
}

install_elrepo（）{

    如果是centosversion 5; 然后
        echo -e“$ {red}错误：$ {plain}不支持CentOS 5.”
        1号出口
    科幻

    rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

    如果是centosversion 6; 然后
        rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm
    elif centosversion 7; 然后
        rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
    科幻

    如果[！-f /etc/yum.repos.d/elrepo.repo]; 然后
        echo -e“$ {red}错误：$ {plain}安装elrepo失败，请检查它。”
        1号出口
    科幻
}

install_config（）{
    if [[“$ {release}”==“centos”]]; 然后
        如果是centosversion 6; 然后
            如果[！-f“/boot/grub/grub.conf”]; 然后
                echo -e“$ {red}错误：找不到$ {plain} /boot/grub/grub.conf，请检查一下。”
                1号出口
            科幻
            sed -i's / ^ default =。* / default = 0 / g'/boot/grub/grub.conf
        elif centosversion 7; 然后
            如果[！-f“/boot/grub2/grub.cfg”]; 然后
                echo -e“$ {red}错误：找不到$ {plain} /boot/grub2/grub.cfg，请检查一下。”
                1号出口
            科幻
            grub2-set-default 0
        科幻
    elif [[“$ {release}”==“debian”|| “$ {release}”==“ubuntu”]]; 然后
        / usr / sbin目录/更新，蛴螬
    科幻

    sed -i'/net.core.default_qdisc/d'/etc/sysctl.conf
    sed -i'/net.ipv4.tcp_congestion_control/d'/etc/sysctl.conf
    echo“net.core.default_qdisc = fq”>> /etc/sysctl.conf
    echo“net.ipv4.tcp_congestion_control = bbr”>> /etc/sysctl.conf
    sysctl -p> / dev / null 2>＆1
}

install_bbr（）{
    check_bbr_status
    如果[$？-eq 0]; 然后
        回声
        echo -e“$ {green} Info：$ {plain} TCP BBR已成功安装。无事可做......”
        出口
    科幻

    if [[“$ {release}”==“centos”]]; 然后
        install_elrepo
        yum --enablerepo = elrepo-kernel -y install kernel-ml kernel-ml-devel
        如果[$？-ne 0]; 然后
            echo -e“$ {red}错误：$ {plain}安装最新内核失败，请检查它。”
            1号出口
        科幻
    elif [[“$ {release}”==“debian”|| “$ {release}”==“ubuntu”]]; 然后
        [[！-e“/ usr / bin / wget”]] && apt-get -y update && apt-get -y install wget
        get_latest_version
        [$？-ne 0] && echo -e“$ {red}错误：$ {plain}获取最新的内核版本失败。” &&退出1
        wget -c -t3 -T60 -O $ {deb_kernel_name} $ {deb_kernel_url}
        如果[$？-ne 0]; 然后
            echo -e“$ {red}错误：$ {plain}下载$ {deb_kernel_name}失败，请检查它。”
            1号出口
        科幻
        dpkg -i $ {deb_kernel_name}
        rm -fv $ {deb_kernel_name}
    其他
        echo -e“$ {red}错误：$ {plain}操作系统不受支持，请更改为CentOS / Debian / Ubuntu并重试。”
        1号出口
    科幻

    install_config挂载
}

明确
回声“----------系统信息----------”
echo“OS：$ opsy”
echo“Arch：$ arch（$ lbit Bit）”
echo“Kernel：$ kern”
echo“----------------------------------------”
echo“自动安装TCP BBR的最新内核”
回声
echo“URL：http：//www.iyu.co/share/tcp-bbr/”
echo“----------------------------------------”
回声
echo“按任意键开始...或按Ctrl + C取消”
炭=`get_char`

install_bbr

回声
read -p“Info：系统需要重启。你要重启吗？[y / n]”is_reboot
如果[[$ {is_reboot} ==“y”|| $ {is_reboot} ==“Y”]]; 然后
    重启
其他
    出口
科幻
